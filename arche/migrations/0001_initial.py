# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-11-20 09:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('places', '0003_auto_20171120_1058'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_title', models.CharField(blank=True, help_text='Title or name of Collection.', max_length=250, verbose_name='acdh:hasTitle')),
                ('description', models.TextField(blank=True, help_text='A verbose description of certain aspects of an entity.         This is the most generic property, use more specific sub-properties where applicable.', null=True, verbose_name='acdh:hasDescription')),
                ('has_contributor', models.ManyToManyField(blank=True, help_text='Agent (person, group, organisation) (B) who was actively involved in         creating/curating/editing a Resource, a Collection or in a Project (A).', related_name='contributes_to_collection', to='places.Person', verbose_name='acdh:hasContributor')),
                ('part_of', models.ForeignKey(blank=True, help_text='Indicates A is a part of aggregate B,         e. g. elements of a series, items of a collection.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='has_part', to='arche.Collection', verbose_name='acdh:isPartOf')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_title', models.CharField(blank=True, help_text='Title or name of Collection.', max_length=250, verbose_name='acdh:hasTitle')),
                ('description', models.TextField(blank=True, help_text='A verbose description of certain aspects of an entity.         This is the most generic property, use more specific sub-properties where applicable.', null=True, verbose_name='acdh:hasDescription')),
                ('has_start_date', models.DateField(blank=True, help_text='Indicates the start date of a Project.', null=True, verbose_name='acdh:hasStartDate')),
                ('has_end_date', models.DateField(blank=True, help_text='Indicates the end date of a Project.', null=True, verbose_name='acdh:hasEndtDate')),
                ('has_contributor', models.ManyToManyField(blank=True, help_text='Agent (person, group, organisation) (B) who was actively involved in         creating/curating/editing a Resource, a Collection or in a Project (A).', related_name='contributes_to_project', to='places.Person', verbose_name='acdh:hasContributor')),
                ('has_funder', models.ManyToManyField(blank=True, help_text='Organisation (B) which provided funding for the project (A).', related_name='is_funding', to='places.Institution', verbose_name='acdh:hasFunder')),
                ('has_principal', models.ManyToManyField(blank=True, help_text='Person officially designated as head of project team or subproject         team instrumental in the work necessary to development of the resource.', related_name='is_principal', to='places.Person', verbose_name='acdh:hasContributor')),
                ('related_collection', models.ManyToManyField(blank=True, help_text='Indication of a project (B) associated with this resource or collection (A).', related_name='has_related_project', to='arche.Collection', verbose_name='acdh:hasRelatedProject')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
